package DAOs;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import JavaSBAProject_06.MariaDBConnection;
import classes.Fighter;

public class FighterDAO {

	//connection check
	public static boolean testConnection() {
		
		try {
			MariaDBConnection connect = new MariaDBConnection();
			Connection conn = null;
			conn = connect.getConnection();
			if(conn != null) {
				System.out.println("Connected");
			}
			conn.close();
			return true;
		}
		catch(Exception e) {
			System.out.println("Failed to connect");
			return false;
		}
	}
	
	//insert method
	public static boolean createFighter(Fighter f) {
				
		//creating mariaDB connection and a Connection object to run queries on
		MariaDBConnection connect = new MariaDBConnection();
		Connection conn = null;
		
		//create insert query format
		String insertQuery = "INSERT INTO fighter (name, SLpM, SApM, TDpF, subPF, koPF, FinRate) VALUES (?, ?, ?, ?, ?, ?, ?)";
		
		try {
			//creating a local instance of the connection object and a statement object
			conn = connect.getConnection();
			//creating an instance of prepareStatement, calling 
			//prepareStatement method of connection object, with query as parameter
			PreparedStatement stmt = conn.prepareStatement(insertQuery);
			
			//setting the column values of the insert query
			stmt.setString(1, f.getName());
			stmt.setDouble(2, f.getSigLpm());
			stmt.setDouble(3, f.getSigApm());
			stmt.setDouble(4, f.getTdpF());
			stmt.setDouble(5, f.getSubpF());
			stmt.setDouble(6, f.getKoPF());
			stmt.setDouble(7, f.getKoPF());
			
			//executing insert query
			stmt.executeUpdate();			
			//close connection
			conn.close();
			System.out.println("Inserted " + f.getName());
			return true;
		}
		catch(Exception e) {
			System.out.println("Insert failed");
			return false;
		}
				
	}
	
	//delete with name input
	public static boolean deleteFighter(int id) {
		//creating mariaDB connection and a Connection object to run queries on
		MariaDBConnection connect = new MariaDBConnection();
		Connection conn = null;
		
		//create delete query format
		String deleteQuery = "DELETE FROM fighter WHERE id=?";
		
		try {
			//creating a local instance of the connection object and a statement object
			conn = connect.getConnection();
			//creating an instance of prepareStatement, calling 
			//prepareStatement method of connection object, with query as parameter
			PreparedStatement stmt = conn.prepareStatement(deleteQuery);
			
			//setting the column values of the delete query
			stmt.setInt(1, id);			
			
			//executing delete query
			stmt.execute();			
			//close connection
			conn.close();
			System.out.println("Fighter deleted");
			return true;
		}
		catch(Exception e) {
			System.out.println("Delete failed");
			return true;
		}
	}
	
	//delete with name input
	public static boolean deleteFighter(String name) {
		//creating mariaDB connection and a Connection object to run queries on
		MariaDBConnection connect = new MariaDBConnection();
		Connection conn = null;
		
		//create delete query format
		String deleteQuery = "DELETE FROM fighter WHERE name=?";
		
		try {
			//creating a local instance of the connection object and a statement object
			conn = connect.getConnection();
			//creating an instance of prepareStatement, calling 
			//prepareStatement method of connection object, with query as parameter
			PreparedStatement stmt = conn.prepareStatement(deleteQuery);
			
			//setting the column values of the delete query
			stmt.setString(1, name);			
			
			//executing delete query
			stmt.execute();			
			//close connection
			conn.close();
			System.out.println("Fighter deleted");
			return true;
		}
		catch(Exception e) {
			System.out.println("Delete failed");
			return true;
		}
	}
	
}
