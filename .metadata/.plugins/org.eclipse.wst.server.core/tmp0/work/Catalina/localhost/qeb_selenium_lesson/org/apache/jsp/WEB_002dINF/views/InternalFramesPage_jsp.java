/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-12-02 21:27:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class InternalFramesPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/Header.jsp", Long.valueOf(1554847728000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Internal Frame Page</title>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<header>\n");
      out.write("\t\t<h1>Internal Frame Page</h1>\n");
      out.write("\t\t");
      out.write("<head>\n");
      out.write("\t<style>\n");
      out.write("\t\t/* Dropdown Button */\n");
      out.write("\t\t.dropbtn {\n");
      out.write("\t\t  background-color: #4CAF50;\n");
      out.write("\t\t  color: white;\n");
      out.write("\t\t  padding: 16px;\n");
      out.write("\t\t  font-size: 16px;\n");
      out.write("\t\t  border: none;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t/* The container <div> - needed to position the dropdown content */\n");
      out.write("\t\t.dropdown {\n");
      out.write("\t\t  position: relative;\n");
      out.write("\t\t  display: inline-block;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t/* Dropdown Content (Hidden by Default) */\n");
      out.write("\t\t.dropdown-content {\n");
      out.write("\t\t  display: none;\n");
      out.write("\t\t  position: absolute;\n");
      out.write("\t\t  background-color: #f1f1f1;\n");
      out.write("\t\t  min-width: 160px;\n");
      out.write("\t\t  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n");
      out.write("\t\t  z-index: 1;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t/* Links inside the dropdown */\n");
      out.write("\t\t.dropdown-content a {\n");
      out.write("\t\t  color: black;\n");
      out.write("\t\t  padding: 12px 16px;\n");
      out.write("\t\t  text-decoration: none;\n");
      out.write("\t\t  display: block;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t/* Change color of dropdown links on hover */\n");
      out.write("\t\t.dropdown-content a:hover {background-color: #ddd;}\n");
      out.write("\t\t\n");
      out.write("\t\t/* Show the dropdown menu on hover */\n");
      out.write("\t\t.dropdown:hover .dropdown-content {display: block;}\n");
      out.write("\t\t\n");
      out.write("\t\t/* Change the background color of the dropdown button when the dropdown content is shown */\n");
      out.write("\t\t.dropdown:hover .dropbtn {background-color: #3e8e41;}\n");
      out.write("\t</style>\n");
      out.write("</head>\n");
      out.write("<header>\n");
      out.write("\t<div class=\"dropdown\">\n");
      out.write("\t\t<button class=\"dropbtn\">Menu</button>\n");
      out.write("\t\t<div class=\"dropdown-content\">\n");
      out.write("\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">Signup Page</a>\n");
      out.write("\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/successPage\">Success Page</a>\n");
      out.write("\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/bookstore\">Bookstore Page</a>\n");
      out.write("\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/iFramesPage\">iFrames Page</a>\n");
      out.write("\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/showAlertPage\">Alert Page</a>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</header>");
      out.write("\n");
      out.write("\t</header>\n");
      out.write("\t<iframe src=\"http://localhost:8080");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/showFirstFrame\" name=\"Per Scholas\">\n");
      out.write("\t\t<p>Your browser does not support iFrames</p>\n");
      out.write("\t</iframe>\n");
      out.write("\t<iframe src=\"http://localhost:8080");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/showSecondFrame\" name=\"Platform\">\n");
      out.write("\t\t<p>Your browser does not support iFrames</p>\n");
      out.write("\t</iframe>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
